[0.000000] (-) TimerEvent: {}
[0.000951] (china_lidar_driver) JobQueued: {'identifier': 'china_lidar_driver', 'dependencies': OrderedDict()}
[0.000991] (china_lidar_driver) JobStarted: {'identifier': 'china_lidar_driver'}
[0.010826] (china_lidar_driver) JobProgress: {'identifier': 'china_lidar_driver', 'progress': 'cmake'}
[0.011412] (china_lidar_driver) JobProgress: {'identifier': 'china_lidar_driver', 'progress': 'build'}
[0.011994] (china_lidar_driver) Command: {'cmd': ['/usr/bin/cmake', '--build', '/workspaces/gh_mk2/build/china_lidar_driver', '--', '-j12', '-l12'], 'cwd': '/workspaces/gh_mk2/build/china_lidar_driver', 'env': OrderedDict([('HOSTNAME', '9648a1ccd90b'), ('GIT_ASKPASS', '/vscode/vscode-server/bin/linux-x64/6c3e3dba23e8fadc360aed75ce363ba185c49794/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/vscode/vscode-server/bin/linux-x64/6c3e3dba23e8fadc360aed75ce363ba185c49794/bin/helpers/browser.sh'), ('HOME', '/root'), ('TERM_PROGRAM_VERSION', '1.81.1'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-4cca7400-61b5-4687-b6cd-d766ba409024.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/vscode/vscode-server/bin/linux-x64/6c3e3dba23e8fadc360aed75ce363ba185c49794/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/vscode/vscode-server/bin/linux-x64/6c3e3dba23e8fadc360aed75ce363ba185c49794/node'), ('COLORTERM', 'truecolor'), ('REMOTE_CONTAINERS', 'true'), ('ROS_DISTRO', 'humble'), ('REMOTE_CONTAINERS_IPC', '/tmp/vscode-remote-containers-ipc-54405e10-2712-4e91-b6ef-4a964491a7f7.sock'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/vscode/vscode-server/bin/linux-x64/6c3e3dba23e8fadc360aed75ce363ba185c49794/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('REMOTE_CONTAINERS_SOCKETS', '["/tmp/vscode-ssh-auth-54405e10-2712-4e91-b6ef-4a964491a7f7.sock","/tmp/.X11-unix/X0","/root/.gnupg/S.gpg-agent"]'), ('DISPLAY', ':2'), ('LANG', 'C.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/tmp/vscode-git-97e2ea5ab1.sock'), ('TERM_PROGRAM', 'vscode'), ('SSH_AUTH_SOCK', '/tmp/vscode-ssh-auth-54405e10-2712-4e91-b6ef-4a964491a7f7.sock'), ('ROS_DOMAIN_ID', '42'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('REMOTE_CONTAINERS_DISPLAY_SOCK', '/tmp/.X11-unix/X0'), ('SHELL', '/bin/bash'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/workspaces/gh_mk2/build/china_lidar_driver'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.053507] (china_lidar_driver) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/data_reader.dir/src/lidar_interaction.cpp.o\x1b[0m\n'}
[0.100044] (-) TimerEvent: {}
[0.200359] (-) TimerEvent: {}
[0.300742] (-) TimerEvent: {}
[0.315814] (china_lidar_driver) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:1\x1b[m\x1b[K:\n'}
[0.316123] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:54:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kon_point_cloud_received\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::PCCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<std::vector<ChinaLidar::Point2D> >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[0.316199] (china_lidar_driver) StderrLine: {'line': b'   54 |     PCCallback \x1b[01;31m\x1b[Kon_point_cloud_received\x1b[m\x1b[K;\n'}
[0.316257] (china_lidar_driver) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.316311] (china_lidar_driver) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[0.316363] (china_lidar_driver) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:6\x1b[m\x1b[K,\n'}
[0.316415] (china_lidar_driver) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:1\x1b[m\x1b[K:\n'}
[0.316472] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:111:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclaration of \xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::PCCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kclass std::function<std::vector<ChinaLidar::Point2D> >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[0.316533] (china_lidar_driver) StderrLine: {'line': b'  111 |     class \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K;\n'}
[0.316589] (china_lidar_driver) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.316641] (china_lidar_driver) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:1\x1b[m\x1b[K:\n'}
[0.316693] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:55:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kon_scan_data_received\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::ScanCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<std::vector<ChinaLidar::Vector2D> >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[0.316747] (china_lidar_driver) StderrLine: {'line': b'   55 |     ScanCallback \x1b[01;31m\x1b[Kon_scan_data_received\x1b[m\x1b[K;\n'}
[0.316797] (china_lidar_driver) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.316848] (china_lidar_driver) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[0.316898] (china_lidar_driver) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:6\x1b[m\x1b[K,\n'}
[0.316949] (china_lidar_driver) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:1\x1b[m\x1b[K:\n'}
[0.317020] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:111:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclaration of \xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::ScanCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kclass std::function<std::vector<ChinaLidar::Vector2D> >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[0.317071] (china_lidar_driver) StderrLine: {'line': b'  111 |     class \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K;\n'}
[0.317118] (china_lidar_driver) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.317166] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:5:81:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kscan_cb\x1b[m\x1b[K\xe2\x80\x99 has incomplete type\n'}
[0.317216] (china_lidar_driver) StderrLine: {'line': b'    5 |     LidarInteraction::LidarInteraction(PCCallback& point_cloud_cb, \x1b[01;31m\x1b[KScanCallback scan_cb\x1b[m\x1b[K\n'}
[0.317264] (china_lidar_driver) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[0.317312] (china_lidar_driver) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[0.317359] (china_lidar_driver) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:6\x1b[m\x1b[K,\n'}
[0.317408] (china_lidar_driver) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:1\x1b[m\x1b[K:\n'}
[0.317456] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:111:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclaration of \xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::ScanCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kclass std::function<std::vector<ChinaLidar::Vector2D> >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[0.317504] (china_lidar_driver) StderrLine: {'line': b'  111 |     class \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K;\n'}
[0.317575] (china_lidar_driver) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.323469] (china_lidar_driver) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:1\x1b[m\x1b[K:\n'}
[0.323689] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::LidarInteraction(ChinaLidar::LidarInteraction::PCCallback&, ChinaLidar::LidarInteraction::ScanCallback, const string&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.323752] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:52:17:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KChinaLidar::LidarInteraction::port\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[0.323815] (china_lidar_driver) StderrLine: {'line': b'   52 |     std::string \x1b[01;35m\x1b[Kport\x1b[m\x1b[K;\n'}
[0.323865] (china_lidar_driver) StderrLine: {'line': b'      |                 \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.323914] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/include/china_lidar_driver/lidar_interaction.hpp:51:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kuint32_t ChinaLidar::LidarInteraction::baudrate\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[0.323968] (china_lidar_driver) StderrLine: {'line': b'   51 |     uint32_t \x1b[01;35m\x1b[Kbaudrate\x1b[m\x1b[K { 153600 };\n'}
[0.324017] (china_lidar_driver) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.324064] (china_lidar_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/gh_mk2/src/china_lidar_driver/src/lidar_interaction.cpp:5:5:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreorder\x07-Wreorder\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[0.324113] (china_lidar_driver) StderrLine: {'line': b'    5 |     \x1b[01;35m\x1b[KLidarInteraction\x1b[m\x1b[K::LidarInteraction(PCCallback& point_cloud_cb, ScanCallback scan_cb\n'}
[0.324161] (china_lidar_driver) StderrLine: {'line': b'      |     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.347882] (china_lidar_driver) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/data_reader.dir/build.make:90: CMakeFiles/data_reader.dir/src/lidar_interaction.cpp.o] Error 1\n'}
[0.348159] (china_lidar_driver) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/data_reader.dir/all] Error 2\n'}
[0.348405] (china_lidar_driver) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[0.349697] (china_lidar_driver) CommandEnded: {'returncode': 2}
[0.380193] (china_lidar_driver) JobEnded: {'identifier': 'china_lidar_driver', 'rc': 2}
[0.390702] (-) EventReactorShutdown: {}
